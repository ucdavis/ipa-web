buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.6.RELEASE")
    }
}

plugins {
    id 'java'
    id 'checkstyle'
    id 'idea'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

checkstyle {
    configFile file("checkstyle.xml")
}

jar {
    archivesBaseName = 'ipa-api'
    archiveVersion = '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Ensure environment variables are passed along
test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.springframework.ldap:spring-ldap-ldif-core:2.3.2.RELEASE")
    compile("io.jsonwebtoken:jjwt:0.9.0")
    compile("commons-io:commons-io:2.6")
    compile("org.springframework.security:spring-security-cas-client:3.0.8.RELEASE")
    compile("org.hibernate:hibernate-validator-annotation-processor:5.2.5.Final")
    compile("org.apache.poi:poi:3.17")
    compile("javax.inject:javax.inject:1")
    compile("ch.qos.logback:logback-core:1.2.3")
    compile("ch.qos.logback:logback-classic:1.2.3")
    compile("org.slf4j:slf4j-api:1.7.25")
    compile("org.apache.commons:commons-lang3:3.7")
    compile("javax.mail:mail:1.4.7")
    compile("org.flywaydb:flyway-core:5.2.4")
    compile("org.apache.httpcomponents:httpclient:4.5.6")
    compile("org.javers:javers-core:2.4.1")
    runtime("mysql:mysql-connector-java:5.1.47")
    runtime("javax.annotation:javax.annotation-api:1.3.2")
    testCompile("junit:junit")
    testCompile("com.h2database:h2:1.4.199")
    testCompile("com.jayway.jsonpath:json-path:2.4.0")
}

task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
            subProject.configurations.each { configuration ->
                resolveConfiguration(configuration)
            }
        }
    }
}
